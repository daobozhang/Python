"""
File: create_overview_md.py
Description: Creates the opverview of files and keywords in a markdown format.
"""

import os
from get_keywords import *

target_path = os.path.join('..','overview.md')


header = [
        '# Overview\n',
        'This file contains an overview of all example scripts and their associated\n', 
        'keywords. This file is automatically generated using the [create_overview_md.py](orga/fenics_laplace.md)\n', 
        'script.\n', 
        '\n', 
        '\n'
        ]

def create_link(fscript):
    """
    creates markdown link from fenics script object
    """
    return "[{}]({})".format(fscript.name,fscript.path)

with open (target_path,'w+') as f:
    for line in header: f.write(line)
    
    kw_dict = get_keyword_ditc(recursive = True)

    f.write('## Scripts\n\n\n')
    #[installation_docker.md](doc/installation_docker.md)
    
    #print name of script as md link + keywords 
    for key,fscript in sorted(kw_dict.items()):
        f.write('* ')
        f.write(create_link(fscript) + ' - \n') 

        f.write(fscript.keyword_list[0])
        if len(fscript.keyword_list) > 1:
            for kw in fscript.keyword_list[1:]: 
                f.write(", {}".format(kw))
                
        f.write('\n\n') #ensures line break in md

    #print keyword list
    f.write("\n # Keywords \n")

    lookup_set = set()
    lookup_dict = {}   #keyword: fscript_list
    for fscript in sorted(kw_dict.values(), key = lambda fs: fs.name):
        for kw in fscript.keyword_list:
            if kw in lookup_set:
                lookup_dict[kw].append(fscript)
            else:
                lookup_set.add(kw)
                lookup_dict.update({kw: [fscript]})

    for key, fscript_list in sorted(lookup_dict.items()):
        f.write("* {} - \n".format(key))
        f.write('{}'.format(create_link(fscript_list[0])))
        if len(fscript_list) > 1:
            for fs in fscript_list[1:]:
                f.write(',\n{}'.format(create_link(fs)))
        f.write('\n')

